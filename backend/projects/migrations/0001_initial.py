# Generated by Django 3.2.8 on 2021-10-05 14:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chief', models.ForeignKey(blank=True, default=0, on_delete=django.db.models.deletion.PROTECT, to='projects.employee', verbose_name='Начальник')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип задачи',
                'verbose_name_plural': 'Типы задач',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Наименование')),
                ('weight', models.IntegerField(verbose_name='Сложность')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('dead_line', models.DateTimeField(blank=True, verbose_name='Дэдлайн')),
                ('is_done', models.BooleanField(default=False)),
                ('task_type', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='projects.tasktype', verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ['-creation_date'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=100, verbose_name='Наименование')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='manager', to='projects.employee', verbose_name='Менеджер')),
                ('task_types', models.ManyToManyField(to='projects.TaskType', verbose_name='Тип')),
                ('tasks', models.ManyToManyField(to='projects.Task', verbose_name='Задания')),
                ('worker_types', models.ManyToManyField(to='projects.Position', verbose_name='Роли')),
                ('workers', models.ManyToManyField(to='projects.Employee', verbose_name='Работники')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
                'ordering': ['project_name'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='position',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='projects.position', verbose_name='Роль'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.user', verbose_name='Пользователь'),
        ),
    ]
